/*
 * Generated code file by Il2CppInspector - http://www.djkaty.com - https://github.com/djkaty
 */

using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

// Image 59: Assembly-CSharp-firstpass.dll - Assembly: Assembly-CSharp-firstpass, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null - Types 6705-10699

namespace UnityEngine.Rendering.PostProcessing
{
	internal static class ShaderIDs // TypeDefIndex: 9619
	{
		// Fields
		internal static readonly int BuiltinTime; // 0x00
		internal static readonly int MainTex; // 0x04
		internal static readonly int Jitter; // 0x08
		internal static readonly int Sharpness; // 0x0C
		internal static readonly int FinalBlendParameters; // 0x10
		internal static readonly int HistoryTex; // 0x14
		internal static readonly int HistoryID; // 0x18
		internal static readonly int SMAA_Temp; // 0x1C
		internal static readonly int AOParams; // 0x20
		internal static readonly int AOColor; // 0x24
		internal static readonly int OcclusionTexture1; // 0x28
		internal static readonly int OcclusionTexture2; // 0x2C
		internal static readonly int SAOcclusionTexture; // 0x30
		internal static readonly int MSVOcclusionTexture; // 0x34
		internal static readonly int DepthCopy; // 0x38
		internal static readonly int LinearDepth; // 0x3C
		internal static readonly int LowDepth1; // 0x40
		internal static readonly int LowDepth2; // 0x44
		internal static readonly int LowDepth3; // 0x48
		internal static readonly int LowDepth4; // 0x4C
		internal static readonly int TiledDepth1; // 0x50
		internal static readonly int TiledDepth2; // 0x54
		internal static readonly int TiledDepth3; // 0x58
		internal static readonly int TiledDepth4; // 0x5C
		internal static readonly int Occlusion1; // 0x60
		internal static readonly int Occlusion2; // 0x64
		internal static readonly int Occlusion3; // 0x68
		internal static readonly int Occlusion4; // 0x6C
		internal static readonly int Combined1; // 0x70
		internal static readonly int Combined2; // 0x74
		internal static readonly int Combined3; // 0x78
		internal static readonly int SSRResolveTemp; // 0x7C
		internal static readonly int Noise; // 0x80
		internal static readonly int Test; // 0x84
		internal static readonly int Resolve; // 0x88
		internal static readonly int History; // 0x8C
		internal static readonly int ViewMatrix; // 0x90
		internal static readonly int InverseViewMatrix; // 0x94
		internal static readonly int InverseProjectionMatrix; // 0x98
		internal static readonly int ScreenSpaceProjectionMatrix; // 0x9C
		internal static readonly int Params2; // 0xA0
		internal static readonly int FogColor; // 0xA4
		internal static readonly int FogParams; // 0xA8
		internal static readonly int VelocityScale; // 0xAC
		internal static readonly int MaxBlurRadius; // 0xB0
		internal static readonly int RcpMaxBlurRadius; // 0xB4
		internal static readonly int VelocityTex; // 0xB8
		internal static readonly int Tile2RT; // 0xBC
		internal static readonly int Tile4RT; // 0xC0
		internal static readonly int Tile8RT; // 0xC4
		internal static readonly int TileMaxOffs; // 0xC8
		internal static readonly int TileMaxLoop; // 0xCC
		internal static readonly int TileVRT; // 0xD0
		internal static readonly int NeighborMaxTex; // 0xD4
		internal static readonly int LoopCount; // 0xD8
		internal static readonly int MotionParams; // 0xDC
		internal static readonly int MotionTmpBuffer; // 0xE0
		internal static readonly int DepthOfFieldTemp; // 0xE4
		internal static readonly int DepthOfFieldTex; // 0xE8
		internal static readonly int Distance; // 0xEC
		internal static readonly int LensCoeff; // 0xF0
		internal static readonly int MaxCoC; // 0xF4
		internal static readonly int RcpMaxCoC; // 0xF8
		internal static readonly int RcpAspect; // 0xFC
		internal static readonly int CoCTex; // 0x100
		internal static readonly int TaaParams; // 0x104
		internal static readonly int AutoExposureEnable; // 0x108
		internal static readonly int AutoExposureTex; // 0x10C
		internal static readonly int PrevExposureTex; // 0x110
		internal static readonly int HistogramBuffer; // 0x114
		internal static readonly int Params; // 0x118
		internal static readonly int Speed; // 0x11C
		internal static readonly int ScaleOffsetRes; // 0x120
		internal static readonly int ExposureCompensation; // 0x124
		internal static readonly int BloomTex; // 0x128
		internal static readonly int SampleScale; // 0x12C
		internal static readonly int Threshold; // 0x130
		internal static readonly int ColorIntensity; // 0x134
		internal static readonly int Bloom_DirtTex; // 0x138
		internal static readonly int Bloom_Settings; // 0x13C
		internal static readonly int Bloom_Color; // 0x140
		internal static readonly int Bloom_DirtTileOffset; // 0x144
		internal static readonly int ChromaticAberration_Amount; // 0x148
		internal static readonly int ChromaticAberration_SpectralLut; // 0x14C
		internal static readonly int Lut2D; // 0x150
		internal static readonly int Lut3D; // 0x154
		internal static readonly int Lut3D_Params; // 0x158
		internal static readonly int Lut2D_Params; // 0x15C
		internal static readonly int PostExposure; // 0x160
		internal static readonly int ColorBalance; // 0x164
		internal static readonly int ColorFilter; // 0x168
		internal static readonly int HueSatCon; // 0x16C
		internal static readonly int Brightness; // 0x170
		internal static readonly int ChannelMixerRed; // 0x174
		internal static readonly int ChannelMixerGreen; // 0x178
		internal static readonly int ChannelMixerBlue; // 0x17C
		internal static readonly int Lift; // 0x180
		internal static readonly int InvGamma; // 0x184
		internal static readonly int Gain; // 0x188
		internal static readonly int Curves; // 0x18C
		internal static readonly int CustomToneCurve; // 0x190
		internal static readonly int ToeSegmentA; // 0x194
		internal static readonly int ToeSegmentB; // 0x198
		internal static readonly int MidSegmentA; // 0x19C
		internal static readonly int MidSegmentB; // 0x1A0
		internal static readonly int ShoSegmentA; // 0x1A4
		internal static readonly int ShoSegmentB; // 0x1A8
		internal static readonly int Vignette_Color; // 0x1AC
		internal static readonly int Vignette_Center; // 0x1B0
		internal static readonly int Vignette_Settings; // 0x1B4
		internal static readonly int Vignette_Mask; // 0x1B8
		internal static readonly int Vignette_Opacity; // 0x1BC
		internal static readonly int Vignette_Mode; // 0x1C0
		internal static readonly int Grain_Params1; // 0x1C4
		internal static readonly int Grain_Params2; // 0x1C8
		internal static readonly int GrainTex; // 0x1CC
		internal static readonly int Phase; // 0x1D0
		internal static readonly int LumaInAlpha; // 0x1D4
		internal static readonly int DitheringTex; // 0x1D8
		internal static readonly int Dithering_Coords; // 0x1DC
		internal static readonly int From; // 0x1E0
		internal static readonly int To; // 0x1E4
		internal static readonly int Interp; // 0x1E8
		internal static readonly int HalfResFinalCopy; // 0x1EC
		internal static readonly int WaveformSource; // 0x1F0
		internal static readonly int WaveformBuffer; // 0x1F4
		internal static readonly int VectorscopeBuffer; // 0x1F8
		internal static readonly int HDR_ON; // 0x1FC
		internal static readonly int ScenePaperWhite; // 0x200
		internal static readonly int JitteredVP; // 0x204
		internal static readonly int PJitter; // 0x208
		internal static readonly int OutlineCorrectionWidth; // 0x20C
		internal static readonly int Scaler; // 0x210
		internal static readonly int Downsample4XBuffer; // 0x214
		internal static readonly int CubeMapTex; // 0x218
		internal static readonly int CubeMapIntensity; // 0x21C
		internal static readonly int UVTransformSource; // 0x220
		internal static readonly int UVTransformTarget; // 0x224
		internal static readonly int Transition; // 0x228
		internal static readonly int[] MainTexes; // 0x230
		internal static readonly int MHYBloomTex; // 0x238
		internal static readonly int MHYBloomBlurComposeWeights; // 0x23C
		internal static readonly int MHYBloomBlurComposeWeights2; // 0x240
		internal static readonly int MHYBloomThreshold; // 0x244
		internal static readonly int MHYBloomScaler; // 0x248
		internal static readonly int MHYBloomTonemapping; // 0x24C
		internal static readonly int MHYBloomIntensity; // 0x250
		internal static readonly int MHYBloomExpossure; // 0x254
		internal static readonly int MHYBloomContrast; // 0x258
		internal static readonly int MHYBloomUVTransform1; // 0x25C
		internal static readonly int MHYBloomUVTransform2; // 0x260
		internal static readonly int MHYBloomUVTransform3; // 0x264
		internal static readonly int RainNoiseTex; // 0x268
		internal static readonly int RainIntensity; // 0x26C
		internal static readonly int RainSpeed; // 0x270
		internal static readonly int RainNoiseUVScale1; // 0x274
		internal static readonly int RainNoiseUVScale2; // 0x278
		internal static readonly int RainNoiseUVScale3; // 0x27C
		internal static readonly int RainNoiseUVScale4; // 0x280
		internal static readonly int RainNoiseUVScale5; // 0x284
		internal static readonly int ToonLightBuffer; // 0x288
		internal static readonly int ToonLightBufferOn; // 0x28C
		internal static readonly int ToonLightBufferThreshold; // 0x290
		internal static readonly int ElementViewEleDrawOn; // 0x294
		internal static readonly int ElementViewSceneBackgroundColor; // 0x298
		internal static readonly int ElementViewSceneLightColor; // 0x29C
		internal static readonly int ElementViewScenePatternTex; // 0x2A0
		internal static readonly int ElementViewSceneWaveTex; // 0x2A4
		internal static readonly int ElementViewEleColors; // 0x2A8
		internal static readonly int ElementViewElePatternTex; // 0x2AC
		internal static readonly int ElementViewParamsFloat1; // 0x2B0
		internal static readonly int ElementViewParamsFloat2; // 0x2B4
		internal static readonly int ElementViewParamsFloat3; // 0x2B8
		internal static readonly int ElementViewParamsHalf1; // 0x2BC
		internal static readonly int ElementViewParamsHalf2; // 0x2C0
		internal static readonly int ElementViewParamsHalf3; // 0x2C4
		internal static readonly int FrameTransitionCapture; // 0x2C8
		internal static readonly int DownsampleSnapUV; // 0x2CC
		internal static readonly int SceneScaledBuffer; // 0x2D0
		internal static readonly int SceneScaledAlphaBuffer; // 0x2D4
		internal static readonly int SceneReflectionBuffer; // 0x2D8
		internal static readonly int SceneReflectionBlurParameter; // 0x2DC
		internal static readonly int DofLensDir0; // 0x2E0
		internal static readonly int DofLensDir1; // 0x2E4
		internal static readonly int DofLensDir2; // 0x2E8
		internal static readonly int DofLensDir3; // 0x2EC
		internal static readonly int DofLensDir4; // 0x2F0
		internal static readonly int DofLensDir5; // 0x2F4
		internal static readonly int DofLensDir6; // 0x2F8
		internal static readonly int DofLensDir7; // 0x2FC
		internal static readonly int DofFocalParams; // 0x300
		internal static readonly int DofBlurParams; // 0x304
		internal static readonly int FarRT; // 0x308
		internal static readonly int NearRT; // 0x30C
		internal static readonly int MBRT; // 0x310
		internal static readonly int RadialBlurParams; // 0x314
		internal static readonly int MiscBlurParams; // 0x318
		internal static readonly int VHOffset; // 0x31C
		internal static readonly int GaussBlurWeights; // 0x320
		internal static readonly int HalfMotionVector; // 0x324
		internal static readonly int GrainNoise; // 0x328
	
		// Constructors
		static ShaderIDs() {} // 0x0000000185E1B910-0x0000000185E1D780
	}
}
